// Generated by CoffeeScript 1.10.0
(function() {
  var BoardController, InterpolateProvider;

  InterpolateProvider = (function() {
    function InterpolateProvider($interpolateProvider) {
      $interpolateProvider.startSymbol('<[');
      $interpolateProvider.endSymbol(']>');
    }

    return InterpolateProvider;

  })();

  BoardController = (function() {
    function BoardController($scope, $http, DataService) {
      var oldWindowWidth, unifyHeights;
      oldWindowWidth = DataService.isWindowMiddle(DataService.getWindowWidth());
      $(window).resize(function() {
        var newWindowWidth;
        newWindowWidth = DataService.isWindowMiddle(DataService.getWindowWidth());
        if (newWindowWidth !== oldWindowWidth) {
          $scope.$apply(function() {
            return unifyHeights();
          });
        }
        return oldWindowWidth = newWindowWidth;
      });
      unifyHeights = function() {
        var isWindowMiddle;
        isWindowMiddle = DataService.isWindowMiddle(DataService.getWindowWidth());
        return $('.post-row').each(function() {
          var as, childs, maxHeight, maxWidth;
          maxHeight = 0;
          maxWidth = $(this).innerWidth() / 3 - 10;
          as = $(this).children('a');
          if (isWindowMiddle) {
            as.each(function() {
              return $(this).children('.col-md-4').each(function() {
                return $(this).children('.front').each(function() {
                  var height;
                  height = $(this).innerHeight();
                  if (height > maxHeight) {
                    return maxHeight = height;
                  }
                });
              });
            });
          }
          childs = $(this).children('.col-md-4');
          if (isWindowMiddle) {
            childs.each(function() {
              return $(this).children('.front').each(function() {
                var height;
                height = $(this).innerHeight();
                if (height > maxHeight) {
                  return maxHeight = height;
                }
              });
            });
            childs.css({
              'height': maxHeight,
              'width': maxWidth
            });
            as.each(function() {
              return $(this).children('.col-md-4').css({
                'height': maxHeight,
                'width': maxWidth
              });
            });
            childs.each(function() {
              $(this).children('.card').css({
                'height': maxHeight,
                'width': maxWidth
              });
              $(this).children('.front').css('transform', "translateZ(" + (maxHeight / 2) + "px) rotateX(0deg)");
              return $(this).children('.back').css('transform', "translateY(" + (maxHeight / 2) + "px) rotateX(-90deg)");
            });
            return as.each(function() {
              return $(this).children('.col-md-4').each(function() {
                $(this).children('.card').css({
                  'height': maxHeight,
                  'width': maxWidth
                });
                $(this).children('.front').css('transform', "translateZ(" + (maxHeight / 2) + "px) rotateX(0deg)");
                return $(this).children('.back').css('transform', "translateY(" + (maxHeight / 2) + "px) rotateX(-90deg)");
              });
            });
          } else {
            childs.css({
              'height': '',
              'width': ''
            });
            as.each(function() {
              return $(this).children('.col-md-4').css({
                'height': '',
                'width': ''
              });
            });
            childs.each(function() {
              $(this).children('.card').css({
                'height': '',
                'width': ''
              });
              $(this).children('.front').css('transform', '');
              return $(this).children('.back').css('transform', '');
            });
            return as.each(function() {
              return $(this).children('.col-md-4').each(function() {
                $(this).children('.card').css({
                  'height': '',
                  'width': ''
                });
                $(this).children('.front').css('transform', '');
                return $(this).children('.back').css('transform', '');
              });
            });
          }
        });
      };
      unifyHeights();
    }

    return BoardController;

  })();

  angular.module('blogApp', []).config(['$interpolateProvider', InterpolateProvider]).factory('DataService', [
    '$window', function($window) {
      return {
        getWindowWidth: function() {
          return $window.innerWidth;
        },
        isWindowMiddle: function(width) {
          return width >= 992;
        }
      };
    }
  ]).directive('hoverClass', [
    'DataService', function(DataService) {
      return {
        restrict: 'A',
        scope: {
          hoverClass: '@'
        },
        link: function(scope, element) {
          element.on('mouseenter', function() {
            var maxHeight;
            if (DataService.isWindowMiddle(DataService.getWindowWidth())) {
              maxHeight = element.children()[0].offsetHeight;
              angular.element(element.children()[0]).css({
                'transform': "translateY(-" + (maxHeight / 2) + "px) rotateX(90deg)"
              });
              angular.element(element.children()[1]).css({
                'transform': "translateZ(" + (maxHeight / 2) + "px) rotateX(0deg)"
              });
              return element.addClass(scope.hoverClass);
            }
          });
          return element.on('mouseleave', function() {
            var maxHeight;
            if (DataService.isWindowMiddle(DataService.getWindowWidth())) {
              maxHeight = element.children()[0].offsetHeight;
              angular.element(element.children()[0]).css({
                'transform': "translateZ(" + (maxHeight / 2) + "px) rotateX(0deg)"
              });
              angular.element(element.children()[1]).css({
                'transform': "translateY(" + (maxHeight / 2) + "px) rotateX(-90deg)"
              });
              return element.removeClass(scope.hoverClass);
            }
          });
        }
      };
    }
  ]).controller('boardController', ['$scope', '$http', 'DataService', BoardController]).controller('footerController', [
    '$scope', 'DataService', function($scope, DataService) {
      return $scope.isMiddle = function() {
        return DataService.isWindowMiddle(DataService.getWindowWidth());
      };
    }
  ]);

}).call(this);
